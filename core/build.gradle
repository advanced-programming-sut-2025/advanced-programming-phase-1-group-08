[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
eclipse.project.name = appName + '-core'

dependencies {
  api "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
  api "com.badlogicgames.gdx:gdx:$gdxVersion"
  api "com.kotcrab.vis:vis-ui:$visUiVersion"
  api "io.github.libktx:ktx-freetype:$ktxVersion"

  if(enableGraalNative == 'true') {
    implementation "io.github.berstanio:gdx-svmhelper-annotations:$graalHelperVersion"
  }

  implementation "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
  implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"

  implementation 'com.google.code.gson:gson:2.10.1'
  implementation 'org.reflections:reflections:0.10.2'

  implementation('com.google.code.gson:gson:2.10.1')
  implementation 'com.esotericsoftware:kryonet:2.22.0-RC1'
  implementation 'com.esotericsoftware:kryo:5.6.2'
}

task runClient(type: JavaExec) {
  group = "application"
  description = "Run the client class"

  classpath = sourceSets.main.runtimeClasspath
  mainClass = 'com.Graphic.model.ClientServer.Client'
  workingDir = rootProject.file("assets")

  jvmArgs = ["-XstartOnFirstThread"]  // ⬅️ این خط رو اضافه کن

  args = []
}
task runServer(type: JavaExec) {
  group = "application"
  description = "Run the MultiGameServer class"

  classpath = sourceSets.main.runtimeClasspath
  mainClass = 'com.Graphic.model.ClientServer.MultiGameServer' // مسیر کامل کلاس سرور
  // معمولاً سرور نیازی به workingDir در assets نداره، مگر اینکه از فایل‌های داخلی استفاده کنه
   workingDir = rootProject.file("assets")

  // آرگومان‌ها رو اینجا بنویس اگر نیازه
  args = []
}


